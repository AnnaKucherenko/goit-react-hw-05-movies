{"version":3,"file":"static/js/736.281d7dd1.chunk.js","mappings":"sSAAMA,EAAW,+BAAjB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,iEAGxB,SAASY,EAAmBC,GACjC,OAAOZ,EAAuB,GAAD,OAAID,EAAJ,wEAA4Ea,EAA5E,+CAGxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,6DAGxB,SAASC,EAAmBD,GACjC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,qEAGxB,SAASE,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,8E,yGC1B/B,EAA6B,8BAA7B,EAA8E,oC,SCG/D,SAASG,EAAT,GAAkD,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,SAAUP,EAAQ,EAARA,MACpD,OAEY,kBAAMM,SAAUA,EAAUE,UAAWC,EAArC,WACI,kBACID,UAAWC,EACXC,KAAK,OACLC,MAAOX,EACPY,YAAY,gBACZL,SAAUA,KAGd,mBAAQG,KAAK,SAAb,UACI,0CCXT,SAASG,IACpB,OAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOd,EAAP,KAAae,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,MAArC,eAAOE,EAAP,KAAeC,EAAf,KAkBA,OACI,iCACI,SAACZ,EAAD,CAAWC,SAdE,SAAAY,GACjBA,EAAIC,iBACc,KAAfnB,EAAMoB,QAITL,EAASf,IACTD,EAAAA,EAAAA,IAAkBC,GAAOqB,MAAK,SAAAC,GAAI,OAAEL,EAAUK,EAAKC,YACnDR,EAAS,KALLS,MAAM,oFAW6BjB,SAlBtB,SAAAW,GACjBH,EAASG,EAAIO,OAAOd,MAAMe,gBAiBqCf,MAAOX,IACjEgB,IACD,wBACKA,EAAOW,KAAI,SAAAC,GAAK,OACb,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADnCH,EAAME","sources":["components/Api/Fetch.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=a5d27c40376a4ea09985282eed260888`);\n}\n\nexport function fetchSearchMovies (query) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=a5d27c40376a4ea09985282eed260888&query=${query}&language=en-US&page=1&include_adult=false`);\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=a5d27c40376a4ea09985282eed260888&language=en-US`);\n}\n\nexport function fetchMovieCredits (movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=a5d27c40376a4ea09985282eed260888&language=en-US`);\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=a5d27c40376a4ea09985282eed260888&language=en-US&page=1`);\n}","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchBar_searchForm__V6XO6\",\"searchForm_input\":\"SearchBar_searchForm_input__Mmbyc\"};","import React  from 'react';\nimport PropTypes from \"prop-types\";\nimport styles from '../SearchBar/SearchBar.module.css';\n\nexport default function Searchbar ({onSubmit, onChange, query}) {\n    return (\n            \n                <form onSubmit={onSubmit} className={styles.searchForm}>\n                    <input\n                        className={styles.searchForm_input}\n                        type=\"text\"\n                        value={query}\n                        placeholder=\"Search movies\"\n                        onChange={onChange}\n                    />\n\n                    <button type=\"submit\" >\n                        <span >Search</span>\n                    </button>\n      \n                </form>\n            \n    );\n    \n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func,\n    onChange: PropTypes.func,\n}","import React, {  useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {fetchSearchMovies} from '../Api/Fetch';\nimport Searchbar from \"../SearchBar/SearchBar\";\n\n\nexport default function MoviesPage (){\n    const [query,setQuery] = useState('');\n    const [movies, setMovies] = useState(null);\n        \n    const handleSearch = evt => {\n        setQuery(evt.target.value.toLowerCase())\n    };\n\n    const handleSubmit = evt=>{\n        evt.preventDefault();\n        if(query.trim()===''){\n            alert('Введите запрос');\n            return;\n        }\n        setQuery(query);\n        fetchSearchMovies(query).then(data=>setMovies(data.results));\n        setQuery('');\n        \n    };\n\n    return(\n        <>\n            <Searchbar onSubmit={handleSubmit} onChange={handleSearch} value={query}/>\n            {movies&&(\n            <ul>\n                {movies.map(movie=>(\n                    <li key={movie.id}>\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n                    </li>\n                ))}\n            </ul> \n            )}\n        </>\n                \n    );\n    \n}\n"],"names":["BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","Searchbar","onSubmit","onChange","className","styles","type","value","placeholder","MoviesPage","useState","setQuery","movies","setMovies","evt","preventDefault","trim","then","data","results","alert","target","toLowerCase","map","movie","to","id","title"],"sourceRoot":""}