{"version":3,"file":"static/js/76.520b2f64.chunk.js","mappings":"qSAAMA,EAAW,+BAAjB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,iEAGxB,SAASY,EAAmBC,GACjC,OAAOZ,EAAuB,GAAD,OAAID,EAAJ,wEAA4Ea,EAA5E,+CAGxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,6DAGxB,SAASC,EAAmBD,GACjC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,qEAGxB,SAASE,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,8E,iHC1B/B,EAA0B,sB,SCKX,SAASG,IACpB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAkBD,GAASS,MAAK,SAAAC,GAC5BH,EAAQG,EAAKJ,WAGnB,CAACN,KAGC,8BACKM,IACD,wBACKA,EAAKK,KAAI,SAAAC,GAAI,OAEV,2BACI,gBAAKC,UAAWC,EAAgBC,IAAMH,EAAKI,aAAL,yCAAuDJ,EAAKI,cAAmBC,EAAaC,IAAKN,EAAKO,QAC5I,uBAAIP,EAAKO,QACT,sCAAcP,EAAKQ,eAHdR,EAAKS,a","sources":["components/Api/Fetch.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=a5d27c40376a4ea09985282eed260888`);\n}\n\nexport function fetchSearchMovies (query) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=a5d27c40376a4ea09985282eed260888&query=${query}&language=en-US&page=1&include_adult=false`);\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=a5d27c40376a4ea09985282eed260888&language=en-US`);\n}\n\nexport function fetchMovieCredits (movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=a5d27c40376a4ea09985282eed260888&language=en-US`);\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=a5d27c40376a4ea09985282eed260888&language=en-US&page=1`);\n}","// extracted by mini-css-extract-plugin\nexport default {\"roleImg\":\"Cast_roleImg__wCZJc\"};","import React, {  useEffect, useState } from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport {fetchMovieCredits} from '../Api/Fetch';\nimport defaultImg from '../errorImg.jpg';\nimport styles from '../Cast/Cast.module.css';\n\nexport default function MovieDetailsPage (){\n    const { movieId } = useParams();\n    const [cast, setCast] = useState(null);\n    \n    useEffect(()=>{\n        fetchMovieCredits(movieId).then(data=>{\n            setCast(data.cast);\n            \n        });\n    },[movieId]);\n    \n    return(\n        <>\n            {cast&&(\n            <ul>\n                {cast.map(item=>(\n                    \n                    <li key={item.id}>\n                        <img className={styles.roleImg} src= {item.profile_path ? (`https://image.tmdb.org/t/p/w500${item.profile_path}`) : (defaultImg)} alt={item.name}></img>\n                        <p>{item.name}</p>\n                        <p>Character:{item.character}</p>\n                    </li>\n                ))}\n            </ul> \n            )}\n        </>\n         \n    );\n    \n}"],"names":["BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","MovieDetailsPage","useParams","useState","cast","setCast","useEffect","then","data","map","item","className","styles","src","profile_path","defaultImg","alt","name","character","id"],"sourceRoot":""}