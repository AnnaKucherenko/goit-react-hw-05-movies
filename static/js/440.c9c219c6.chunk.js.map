{"version":3,"file":"static/js/440.c9c219c6.chunk.js","mappings":"sSAAMA,EAAW,+BAAjB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,iEAGxB,SAASY,EAAmBC,GACjC,OAAOZ,EAAuB,GAAD,OAAID,EAAJ,wEAA4Ea,EAA5E,+CAGxB,SAASC,EAAaC,GAC3B,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,6DAGxB,SAASC,EAAmBD,GACjC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,qEAGxB,SAASE,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,8E,kHC1B/B,EAA4B,oCAA5B,EAAgF,wCAAhF,EAAyI,yCAAzI,EAAmM,yC,SCKpL,SAASG,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,MACRP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOO,EAAP,KAAeC,EAAf,KACA,GAA4BR,EAAAA,EAAAA,UAAS,IAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAAkCV,EAAAA,EAAAA,UAAS,IAA3C,eAAOW,EAAP,KAAkBC,EAAlB,KA6BA,OAXAC,EAAAA,EAAAA,YAAU,YACNvB,EAAAA,EAAAA,IAAaC,GAASuB,MAAK,SAAAC,GACvBL,EAAU,kCAAD,OAAmCK,EAAKC,cACjDd,EAASa,EAAKE,gBACdb,EAAYW,EAAKZ,UACjBG,EAAQS,EAAKG,aAAaC,MAAM,EAAG,IACnCX,EAjBR,SAA6BD,GACzB,IAAMa,EAAa,GAOnB,OANAb,EAAOc,KAAI,SAAAC,GAEP,OADAF,EAAWG,KAAKD,EAAME,MACfJ,KAGSA,EAAWK,KAAK,KAUtBC,CAAmBX,EAAKR,SAClCK,EAAaG,EAAKY,mBAExB,CAACpC,KAGC,4BACA,mBAAQqC,KAAK,SAASC,QA7BX,WACXhC,EAAQF,EAASmC,QA4BjB,sBACA,iBAAKC,UAAWC,EAAhB,WACI,gBAAKC,IAAKxB,EAAQyB,IAAKjC,EAAO8B,UAAWC,KAEzC,iBAAKD,UAAWC,EAAhB,WACI,0BAAK/B,EAAL,KAAcI,EAAd,QACA,wCAAgBM,MAChB,sCACA,uBAAIR,KACJ,oCACA,uBAAII,WAGZ,mBACA,mDACA,iBAAKwB,UAAWC,EAAhB,WACI,SAAC,KAAD,CAAMG,GAAE,kBAAc5C,EAAd,SAAgCuC,MAAOnC,EAASmC,MAAxD,mBACA,SAAC,KAAD,CAAMK,GAAE,kBAAc5C,EAAd,YAAkCuC,MAAOnC,EAASmC,MAA1D,yBAGJ,mBACA,SAAC,KAAD","sources":["components/Api/Fetch.jsx","webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=a5d27c40376a4ea09985282eed260888`);\n}\n\nexport function fetchSearchMovies (query) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=a5d27c40376a4ea09985282eed260888&query=${query}&language=en-US&page=1&include_adult=false`);\n}\n\nexport function fetchMovieId(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=a5d27c40376a4ea09985282eed260888&language=en-US`);\n}\n\nexport function fetchMovieCredits (movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=a5d27c40376a4ea09985282eed260888&language=en-US`);\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=a5d27c40376a4ea09985282eed260888&language=en-US&page=1`);\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieDetailsPage_movieCard__Z2T8b\",\"movieCard_img\":\"MovieDetailsPage_movieCard_img__DVTcX\",\"movieCard_info\":\"MovieDetailsPage_movieCard_info__bUZg4\",\"movieCard_link\":\"MovieDetailsPage_movieCard_link__Wa+zC\"};","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, Outlet, useNavigate, useLocation} from \"react-router-dom\";\nimport {fetchMovieId} from '../Api/Fetch';\n\nimport styles from '../MovieDetailsPage/MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage (){\n    const location = useLocation();\n    const history = useNavigate();\n    const { movieId } = useParams();\n    const [title, setTitle] = useState('');\n    const [overview, setOverview] = useState('');\n    const [date, setDate] = useState('');\n    const [genres, setGenres] = useState('');\n    const [poster, setPoster] = useState('');\n    const [userScore, setUserScore] = useState('');\n       \n    const goBack = ()=> {\n        history(location.state);\n         \n    };\n   \n    function createListOfGenres (genres){\n        const genresList = [];\n        genres.map(genre=>{\n            genresList.push(genre.name);\n            return genresList;\n        })\n        \n        const genreString = genresList.join(\" \");\n        return genreString;\n    }\n\n    useEffect(()=>{\n        fetchMovieId(movieId).then(data=>{\n            setPoster(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\n            setTitle(data.original_title);\n            setOverview(data.overview);\n            setDate(data.release_date.slice(0, 4));\n            setGenres(createListOfGenres(data.genres));\n            setUserScore(data.vote_average);\n        });\n    },[movieId]);\n   \n    return(\n        <div>\n        <button type=\"button\" onClick={goBack} >Go back</button>\n        <div className={styles.movieCard}>\n            <img src={poster} alt={title} className={styles.movieCard_img}></img>\n\n            <div className={styles.movieCard_info}>\n                <h1>{title} ({date})</h1>\n                <p>User Score: {userScore}</p>\n                <h2>Overview</h2>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres}</p>\n            </div>\n        </div>\n        <hr></hr>\n        <p>Additional information</p>\n        <div className={styles.movieCard_link}>\n            <Link to={`/movies/${ movieId }/cast` } state={location.state}>Cast</Link>\n            <Link to={`/movies/${ movieId }/reviews`} state={location.state}>Reviews</Link>\n        </div>\n        \n        <hr></hr>\n        <Outlet />\n        </div>\n                \n    );\n    \n}"],"names":["BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovie","fetchSearchMovies","query","fetchMovieId","movieId","fetchMovieCredits","fetchMovieReviews","MovieDetailsPage","location","useLocation","history","useNavigate","useParams","useState","title","setTitle","overview","setOverview","date","setDate","genres","setGenres","poster","setPoster","userScore","setUserScore","useEffect","then","data","poster_path","original_title","release_date","slice","genresList","map","genre","push","name","join","createListOfGenres","vote_average","type","onClick","state","className","styles","src","alt","to"],"sourceRoot":""}